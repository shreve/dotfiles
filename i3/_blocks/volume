#!/bin/bash

source ~/bin/_util

# Copyright (C) 2014 Julien Bonjean <julien@bonjean.info>
# Copyright (C) 2014 Alexander Keller <github@nycroth.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

#------------------------------------------------------------------------

# The second parameter overrides the mixer selection
# For PulseAudio users, use "pulse"
# For Jack/Jack2 users, use "jackplug"
# For ALSA users, you may use "default" for your primary card
# or you may use hw:# where # is the number of the card desired
# MIXER="default"
# [ -n "$(lsmod | grep pulse)" ] && MIXER="pulse"
# [ -n "$(lsmod | grep jack)" ] && MIXER="jackplug"
# MIXER="${2:-$MIXER}"
MIXER="pulse"

# The instance option sets the control to report and configure
# This defaults to the first control of your selected mixer
# For a list of the available, use `amixer -D $Your_Mixer scontrols`
SCONTROL="${BLOCK_INSTANCE:-$(amixer -D pulse scontrols |
                  sed -n "s/Simple mixer control '\([A-Za-z ]*\)',0/\1/p" |
                  head -n1
                )}"

# The first parameter sets the step to change the volume by (and units to display)
# This may be in in % or dB (eg. 5% or 3dB)
STEP="${1:-5%}"

#------------------------------------------------------------------------

capability() { # Return "Capture" if the device is a capture device
  amixer -D pulse get $SCONTROL |
    sed -n "s/  Capabilities:.*cvolume.*/Capture/p"
}

mixer_state() {
  amixer -D pulse get $SCONTROL $(capability)
}

is_muted() {
    [[ $(mixer_state | grep "off" | wc -l) -gt 0 ]] && return 0
    return 1
}

volume() {
    mixer_state | grep "%" | head -1 | awk -F "[][]" '{print $2}' | sed -e 's/%//'
}

#------------------------------------------------------------------------

case $button in
  1|3) amixer -q sset $SCONTROL $(capability) toggle ;;  # right click, mute/unmute
  4) amixer -q sset $SCONTROL $(capability) ${STEP}- unmute ;; # scroll up, increase
  5) amixer -q sset $SCONTROL $(capability) ${STEP}+ unmute ;; # scroll down, decrease
esac

vol=$(volume)

if is_muted; then
    color='grey'
    icon=""
else
    color="give your heart"
    icon=""
fi

pango_color "$color" "$icon $vol%"
