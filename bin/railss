#!/usr/bin/env bash

LOG_FILE=log/development.log
SOCK_PATH=/tmp/$(basename $(pwd)).sock;

function start {
    local PID=$(__puma_pid__)
    if [[ "$PID" -eq "" ]]
    then
        touch $LOG_FILE
        if ! grep puma Gemfile >/dev/null; then
            puma -b unix://$SOCK_PATH > $LOG_FILE &
        else
            bundle exec puma -b unix://$SOCK_PATH > $LOG_FILE &
        fi
        spinner "Starting" &
        spid=$!
        while [ ! -e $SOCK_PATH ]
        do
            sleep 0.2
        done
        echo -ne '\r'
        echo "Rails server started on $(__domain__)"
        kill $spid &>/dev/null
    else
        echo "Rails server already running."
    fi
}

function stop {
    local PID=$(__puma_pid__)
    if [[ "$PID" -ne "" ]] # If there is a PID
    then
        kill $PID &> /dev/null
        rm $SOCK_PATH
        echo "Rails server stopped."
    else
        echo "Rails server not running."
    fi
}

function status {
    local PID=$(__puma_pid__)
    if [[ "$PID" -ne "" ]]
    then
        echo "Rails server running (pid $PID) $(__domain__)"
    else
        echo "Rails server not running."
    fi
}

function restart {
    stop;
    bin/spring stop &> /dev/null
    start;
}

function log {
    tail -f log/${1:-"development"}.log
}

function cache {
    echo 'rm -rf tmp/cache/'
    rm -rf tmp/cache/
}

function spinner {
    i=1
    sp="/â€”\|"
    echo -n ' '
    while true
    do
        echo -ne "\r$1: ${sp:i++%${#sp}:1} "
        sleep 0.1
    done
}

function __domain__ {
    local sock=$(basename $SOCK_PATH);
    echo "http://${sock%.*}.dev";
}

function __puma__ {
    echo "Checking for puma"
    grep puma Gemfile >/dev/null
}

function __puma_pid__ {
    netstat -ap 2>/dev/null | grep $SOCK_PATH | sed -r 's/.* ([0-9]+)\/.*$/\1/'
}

case "$1" in
    start | stop | restart | cache | log | status)
        $@
        ;;

    *)
        echo "Usage: railss [command [arguments]]"
        echo ""
        echo "  start           start `rails s` in the background"
        echo "  stop            stop the running `rails s` process"
        echo "  restart         stop, kill spring, start"
        echo "  log [name]      tail the log file (default: development)"
        echo "  cache           wipe the file cache store"
        echo ""
        ;;
esac
