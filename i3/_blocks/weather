#!/usr/bin/env bash

cache=~/.cache/weather
key=$(cat ~/.config/darksky.key)
url="https://api.darksky.net/forecast/$key"
params="?exclude=alerts,flags,daily,hourly,minutely"

cache_invalid() {
    return $(find $cache -mmin -10 | wc -l)
}

all_data () {
    # If the cache was not last modified less than 10 minutes ago
    if cache_invalid; then
        # Update the cache
        /home/jacob/code/dotfiles/bin/wifi without_vpn $0 force_update
    fi
    cat $cache;
}

update_cache() {
    data=$(curl -s -N "$url/$(coords)$params")
    if [ "$?" = "0" ]; then
        echo $data | json_pp > $cache;
        echo "city:$(fetch_city)" >> $cache;
    fi
}

city() {
    all_data | grep city | awk -F ':' '{print $2}'
}

status () {
    all_data | grep summary | awk -F "\"" '{ print $4 }'
}

temp () {
    all_data | grep temperature | awk '{ print $3 }' | sed 's/,//'
}

apparent_temp () {
    all_data | grep apparent | awk '{ print $3 }' | sed 's/,//'
}

fetch_location () {
    dbus-send --type=method_call --print-reply=literal \
              --dest="org.freedesktop.Geoclue.Providers.UbuntuGeoIP" \
              /org/freedesktop/Geoclue/Providers/UbuntuGeoIP \
              org.freedesktop.Geoclue.Position.GetPosition
}

coords () {
    fetch_location | grep double | head -n 2 | awk '{ print $2 }' | tr '\n' ',' | sed 's/,$//'
}

fetch_city () {
    dbus-send --type=method_call --print-reply=literal \
              --dest="org.freedesktop.Geoclue.Providers.UbuntuGeoIP" \
              /org/freedesktop/Geoclue/Providers/UbuntuGeoIP \
              org.freedesktop.Geoclue.Address.GetAddress | grep locality | awk '{$1=""; print $0}' | sed 's/ )//' | sed 's/^\s\+//'
}

case "$1" in

    update)
        touch --date=2000-01-01 $cache
        ;;

    force_update)
        update_cache
        ;;

    info)
        echo "City: $(city)"
        echo "Location: $(coords)"
        echo "Temp: $(temp)"
        ;;

    *)
        echo "$(city) :: $(status) :: $(temp)/$(apparent_temp)Â°F"
        ;;
esac
